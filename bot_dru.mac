|**
----------------------------
BOT_DRU.mac
----------------------------
This macro is configured for use by the DRUID class
Modify the BOT_CLS_CHARNAME.ini file for use by a specific toon
This was written ground up for usage with xiris's bots.

Usage: /mac bot_dru ${_tank1Name} ${_tank2Name} ${_healPoint} ${_assistArgs}

______________________________________________
REVISION HISTORY
    12.04.15	xiris	INITIAL REVISION
	03.27.15	xiris	Added handlers for chchain (see xiris_healing.inc)
	10.27.16	xiris 	Moved Buffing to external include
	09.01.17	xiris 	Swapped some subs with the better written shaman versions
	09.17.18    xiris   Included ALL xiris bot libraries in common instead of in individual macros	
	12.22.21	xiris	Cleaned up some of the healing to bring inline with clerics
	04.05.22 	xiris	Added new Events aggregator and handlers
	04.16.22	xiris	Overhauled group heal method and variable names
						Moved commons healing functions to the include
______________________________________________
REQUIRED PLUGINS
    mq2cast
    mq2eqbc
    mq2debuffs
    mq2moveutils
    
______________________________________________
REQUIRED INCLUDES  
	xiris_common/xiris_common.inc
**|


#include xiris_common/xiris_common.inc

#TURBO 120

Sub InitEvents_Class
	/call RegisterClassEvents Events_DRU 1
/return

Sub Events_DRU
	/doevents CelestialRegeneration
/return 

Sub Main(string _tank1Name, string _tank2Name, string _tank3Name, int _healPoint, string _assistArgs)
	
	
	/echo You are now in xiris_bot_${Me.Class.ShortName}.mac

	|-- initialize the common xbot libraries
	/call xbot_initialize ${_tank1Name} ${_tank2Name} ${_tank3Name} ${_healPoint} ${_assistArgs}

	|-- initialize the macro specific libraries
	/call variant_initialize

	|-- report my status
	/dgt [${Me.Class.ShortName}] ${Me.Name} ${str_action} >> ${Spawn[${_tank1Name}].CleanName} <<  @ ${int_point_tank_normal} ${_assistArgs}

	|-- target the MT
	/call TrueTarget ${int_MTID}

	|**
	----------------------------
	Main Loop
	----------------------------
	Runs in order listed,
	if adding any routine add the call here
	----------------------------
	**|
	
	:MainLoop
		/if (${Me.Hovering} || ${Window[tradewnd].Open} || ${Window[lootwnd].Open}) /goto :MainLoop
		|-- Check all Events
		/call RunAllEvents

		|-- Check to make sure MT is still alive, if not, find another
		/call chkMTAlive FALSE
		
		|-- Check to see if self needs to be cured (xiris_curing.inc)
		/call chkNeedCure

		|-- Check the three main groupings of heal classes (xiris_healing.inc)
		/call chkHeal_MT
		/call chkHeal_Self
		/call chkHeal_Group

		|-- Check Auto Assist if its on
		/if (${bln_autoAssist}) /call chkAutoAssist
		
		/if (${bln_engaged}) {
			|-- check all events
			/call RunAllEvents
			
			|-- debuff lib
			/if (${${DEBUFF_Total}}) /call chkDebuffsOnSingleTarget ${int_targetID}
			
			|-- dps library (priest)
			/call chkDOT
			/call chkNuke
			
			|-- std library (burns/aa/clicks)
			/call chkAA
			/call chkBurn
			/call chkClicky
			
			|-- verify target status
			/call chkTargetStatus
		} else {
			|-- check utilities, includes: sit,loot,leash (out of combat only) and only once every 10 seconds
			/if (!${timer_check_utilities}) /call chkUtils
			/if (!${timer_check_downshits}) /call chkDownshits
			/if (!${timer_check_loot} && ${bln_looting}) /call chkLoot
		}
	|-- start again	
    /goto :MainLoop
/return	


Sub EVENT_CelestialRegeneration
	/call MGBCelestialRegeneration
/return

Sub chkMGBCelestialRotation
	| loop through the MGB Celestial Rotation members
	| if they have all fired before (me) and ! Celestial Regeneration, then fire mine.

/return


Sub MGBCelestialRegeneration
	/if (${Me.AltAbilityReady[Mass Group Buff]} && ${Me.AltAbilityReady[Spirit of the Wood]}) {
		/call MQ2Cast "Mass Group Buff" alt
		/delay 10
		/call MQ2Cast "Spirit of the Wood" alt
		/return
	}

	/if (${Me.AltAbilityReady[Spirit of the Wood]}) {
		/call MQ2Cast "Spirit of the Wood" alt
	}

/return


|**
 ----------------------------
 UTILITY Subs
 ----------------------------
 Things to do while OOC (or if in RAID)
 ----------------------------
**|   
Sub chkUtils
	|-- Standard Methods
	/call chkSit
	/varset timer_check_utilities 20s
/return

|**
 ----------------------------
 INITIALIZATION Subs
 ----------------------------
 Initialization of values for this specific macro variant
 ----------------------------
**|

Sub variant_initialize
	|-- set up default vars
	/declare    str_action				string	outer	Druiding	
	/memspellset default

	|-- set up class vars

	/echo \at${Me.Class.Name} Loaded: MT: ${str_MTName}(${int_MTID}) HealPoint:${healPoint} ST: ${str_STName}(${int_STID})
	/call InitEvents_Class
/return





